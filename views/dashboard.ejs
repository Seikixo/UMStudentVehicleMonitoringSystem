<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="dashboardUMSVMS.css">
    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css"
    integrity="sha256-p4NxAoJBhIIN+hmNHrzRCf9tD/miZyoHS5obTRR9BMY="
    crossorigin=""/>
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"
    integrity="sha256-20nQCchB9co0qIjJZRGuk2/Z9VM+kNiyxNV1lvTlZBo="
    crossorigin=""></script>
    <title>Dashboard | UMSVMS</title>
</head>
<body>
    <!--header section starts-->
    <header class="navbar">
        <h1 class="logo">OBSENTRY</h1>
        <ul class="links">    
            <li><a href="#">About</a></li>
            <li><a href="#">Destination</a></li>
            <li><a href="#">More info</a></li>
            <li><a href="#" id="logout">Logout</a></li>
            <li><h2>Welcome <%= user.fullName %> </h2></li>
            <script>
                document.getElementById("logout").addEventListener('click', async function() {
                    try {
                        const response = await fetch('/logoutSession', { method: 'POST' });
                        const data = await response.json();
                        if (data.status === 'logged out') {
                            window.location.href = "/";
                        } else {
                            alert("Failed to log out!");
                        }
                    } catch (error) {
                        console.error("Error logging out: ", error);
                        alert("Error logging out!");
                    }
                });
            </script>
        </ul>
        
        <img src="img/menu_FILL0_wght400_GRAD0_opsz48.png" alt="menu-btn" class="menu-btn">
        <script>
            //Menu
            const menuBtn = document.querySelector('.menu-btn')
            const navLinks = document.querySelector('.links')

            menuBtn.addEventListener('click',()=>{
                navLinks.classList.toggle('mobile-menu')
            })
        </script>
    </header>
    <!--header section ends-->

    <!--slides section starts-->
        <div class="img-slides">
            <div class="slide active">
                <img src="img/background3.jpg" alt="">
                <div class="info">
                    <h2>BE Building</h2>
                </div>
            </div>
            <div class="slide">
                <img src="img/background7.jpg" alt="">
                <div class="info">
                    <h2>GET Building</h2>
                </div>
            </div>
            <div class="slide">
                <img src="img/background6.jpg" alt="">
                <div class="info">
                    <h2>DPT Building</h2>
                </div>
            </div>
            <div class="nav-slides">
                <div class="btn active"> </div>
                <div class="btn"> </div>
                <div class="btn"> </div>
            </div>
        </div>
        
        <script>
            //Image Slides
            var slides = document.querySelectorAll('.slide');
            var buttons = document.querySelectorAll('.btn');
            let currentSlide = 1;
        
            var manualNav = function(manual){
                slides.forEach((slide) => {
                    slide.classList.remove('active');
        
                    buttons.forEach((btn) => {
                        btn.classList.remove('active');
                    });
                });
        
                slides[manual].classList.add('active');
                buttons[manual].classList.add('active');
            }
        
            buttons.forEach((btn, i) => {
                btn.addEventListener("click", () => {
                manualNav(i);
                currentSlide = i; 
                });
            });
        
            var autoNav = function(activeClass){
                let active = document.getElementsByClassName('active');
                let i = 1;
        
                var repeater = () => {
                    setTimeout(function(){
        
                        [...active].forEach((activeSlide) => {
                            activeSlide.classList.remove('active');
                        });
        
                        slides[i].classList.add('active');
                        buttons[i].classList.add('active'); 
                        i++
                        
                        if(slides.length == i){
                            i = 0;
                        }
        
                        if(i >= slides.length){
                            return;
                        }
        
                        repeater();
                    }, 10000);
                }
                repeater();
            }
            autoNav();
            </script> 
    <!--slides section ends-->

    <!--main section starts-->
    <main class="main">
        <div class="destination">
            <div class="banner1">
                <h2>Select Destination</h2>
            </div> 
                <br>
            <form id="locationForm" action="/submitLoc" method="post" >
                <div class="start">
                <label>From</label>
                    <select name="from" id="from">
                        <option data-lat="7.0651219167851815" data-lon="125.59819727403885">Matina Gate</option>
                        <option data-lat="7.065567930287546" data-lon="125.5971292483971">BE Building</option>
                        <option data-lat="7.065837951990798" data-lon="125.59612660868727">Canteen</option>
                        <option data-lat="7.065135226005488" data-lon="125.59453605876116">FEA Building</option>                   
                        <option data-lat="7.067267065604182" data-lon="125.59638485105306">GET Building</option>
                        <option data-lat="7.0682333091136345" data-lon="125.59571698097541">DPT Building</option>
                        <option data-lat="7.067572212044512" data-lon="125.59213988869477">Maa Gate</option>
                    </select>
                </div>
                <br>
                <div class="finish">
                    <label>To</label>
                    <select name="to" id="to">
                        <option data-lat="7.0651219167851815" data-lon="125.59819727403885">Matina Gate</option>
                        <option data-lat="7.065567930287546" data-lon="125.5971292483971">BE Building</option>
                        <option data-lat="7.065837951990798" data-lon="125.59612660868727">Canteen</option>
                        <option data-lat="7.065135226005488" data-lon="125.59453605876116">FEA Building</option>                   
                        <option data-lat="7.067267065604182" data-lon="125.59638485105306">GET Building</option>
                        <option data-lat="7.0682333091136345" data-lon="125.59571698097541">DPT Building</option>
                        <option data-lat="7.067572212044512" data-lon="125.59213988869477">Maa Gate</option>
                    </select> 
                </div>
                <br>
                <input type="submit" class="submit" id="submit" value="SUBMIT">
                <input type="submit" class="cancel" id="cancel" value="CANCEL">
            </form> 

            <script src="/socket.io/socket.io.js"></script>
            <script>
                var socketRFID = io.connect();  
                
                socketRFID.on('rfidTapped', function(data) {
                    alert('Welcome Student');
                    enableFormAndClearSession();
                });

                function disableForm() {
                    document.getElementById('locationForm').querySelectorAll('input.submit, select').forEach(input => input.disabled = true);
                    localStorage.setItem('formDisabled', 'true');
                }
            
                function enableFormAndClearSession() {
                    document.getElementById('locationForm').querySelectorAll('input, select').forEach(input => input.disabled = false);
                    localStorage.removeItem('formDisabled');
                } 
            
                window.onload = function() {
                    // Check if the form should be disabled based on local storage value
                    if (localStorage.getItem('formDisabled') === 'true') {
                        disableForm();
                        
                        // Automatically enable the form after 10 minutes (600000 milliseconds) if it's disabled on page load
                        setTimeout(() => {
                            enableFormAndClearSession();
                        }, 600000);
                    }
                }
            
                document.getElementById('locationForm').addEventListener('submit', async (event) => {
                    event.preventDefault();
            
                    const from = document.getElementById('from');
                    const to = document.getElementById('to');
            
                    const formData = {
                        from: from.value,
                        to: to.value,
                        fromLat: from.options[from.selectedIndex].getAttribute('data-lat'),
                        fromLon: from.options[from.selectedIndex].getAttribute('data-lon'),
                        toLat: to.options[to.selectedIndex].getAttribute('data-lat'),
                        toLon: to.options[to.selectedIndex].getAttribute('data-lon')
                    };
            
                    // Submit data to server
                    const response = await fetch('/submitLoc', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json'
                        },
                        body: JSON.stringify(formData)
                    });
            
                    if(response.ok) {
                        disableForm();
                        alert('Please tap the RFID to the scanner.');
                        setTimeout(() => {
                            enableFormAndClearSession();
                        }, 600000);
                    } else {
                        alert('Error submitting data.');
                    }
                });

                document.getElementById('cancel').addEventListener('click', async (event) =>{
                    event.preventDefault();
                    try {
                        const response = await fetch('/cancelSession', {
                            method: 'POST'
                        });
                        const result = await response.json();
                        if (result.status === 'Cancel success'){
                            alert('You can now have a new entry');
                            enableFormAndClearSession();
                        }
                        else {
                            alert('Cancel failed');
                        }
                    }
                    catch (err) {
                        alert('Error during cancel.');
                    }
                });

                document.getElementById('logout').addEventListener('click', async () => {
                    try {
                        const response = await fetch('/logoutSession', {
                            method: 'POST'
                        });
                        const result = await response.json();
                        if (result.status === 'logged out') {
                            enableFormAndClearSession(); // enable the form and clear localStorage upon successful logout
                        } else {
                            alert('Failed to logout.');
                        }
                    } catch (err) {
                        alert('Error during logout.');
                    }
                });
            </script>
            
        </div>

        <div class="information"> 
            <h1>More Information</h1>
        </div>

        <div class="card2">
            <h2>Vehicle Passenger </h2>
            <br>
            <h2><%= passengers %></h2>
        </div>

        <div class="card3">
            <h2>Peak hours</h2>
            <canvas id="myBarChart"></canvas>
            <script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.4"></script>
            <script type="module">
                import { initializeApp } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-app.js";
                import { getDatabase, ref, set, get, child } from "https://www.gstatic.com/firebasejs/10.4.0/firebase-database.js";
                const firebaseConfig = {
                    apiKey: "AIzaSyAMYwrxpJqkVprEhcnCSgU7H3l4yPNKFIc",
                    authDomain: "monitoringthesis.firebaseapp.com",
                    databaseURL: "https://monitoringthesis-default-rtdb.asia-southeast1.firebasedatabase.app",
                    projectId: "monitoringthesis",
                    storageBucket: "monitoringthesis.appspot.com",
                    messagingSenderId: "790682496758",
                    appId: "1:790682496758:web:2dad0d5c6c9e8000dc86d7"
                };
            
                const app = initializeApp(firebaseConfig);
                const db = getDatabase(app);        

                async function fetchLoginData() {
                const times = [];
                const studentCounts = [];
                for (let i = 0; i < 24; i++) { // For every hour of the day
                    const hourRef = ref(db, 'login/' + i);
                    const snapshot = await get(hourRef);
                    times.push(i + ':00');
                    studentCounts.push(snapshot.exists() ? snapshot.val() : 0);
                }

                // Now create the chart with fetched data
                const ctx = document.getElementById('myBarChart').getContext('2d');
                    new Chart(ctx, {
                        type: 'horizontalBar',
                        data: {
                            labels: times,
                            datasets: [{
                                label: 'Number of Students',
                                data: studentCounts,
                                backgroundColor: Array(24).fill('rgba(75, 192, 192, 0.2)'), // Colors for the bars
                                borderColor: Array(24).fill('rgba(75, 192, 192, 1)'), // Colors for the bar borders
                                borderWidth: 1
                            }]
                        },
                        options: {
                            responsive: true,
                            maintainAspectRatio: false,
                            scales: {
                                x: {
                                    beginAtZero: true,
                                    title: {
                                        display: true,
                                        text: 'Number of Students'
                                    }
                                },
                                y: {
                                    title: {
                                        display: true,
                                        text: 'Time per Hour'
                                    }
                                }
                            }
                            
                        }
                    });
                }
                // Fetch data and create chart on page load
                fetchLoginData();
        
            </script>
        </div>
        
        <div class="card4">
            <h2>Distance Traveled</h2> 
            <br>
            <h2><span id="distance-display">0.00</span></h2>
            
            <script src="/socket.io/socket.io.js"></script>   
            <script>
                const socketDistance = io();

                socketDistance.on('totalDistance', (distance) => {
                    document.getElementById('distance-display').innerText = `${distance.toFixed(2)} km`;  
                });
            </script>
        </div>

        <div class="card5">
            <h2>Air Quality</h2>
            <br>
            <h2><span id="coConcentration"><%= coConcentration ? coConcentration : 'No data available' %></span> ppm</h2>
                
            <script src="/socket.io/socket.io.js"></script> 
            <script>
                const socketCO = io();

                socketCO.on('coData', (data) => {
                    document.querySelector("#coConcentration").textContent = data.coConcentration;
                });
            </script>
        </div>
 
        <div class="umgmap">
            <div class="umgmapstyle" id="map">
                <script src="/socket.io/socket.io.js"></script>
                <script>   
                   const map = L.map('map').setView([0, 0], 17);
       
                    L.tileLayer('https://tile.openstreetmap.org/{z}/{x}/{y}.png', {
                    maxZoom: 19,
                    attribution: '© OpenStreetMap'
                    }).addTo(map); 

                    const customIcon = L.icon({
                        iconUrl: 'img/bus-stop.png',
                        iconSize: [85, 90],
                        iconAnchor: [42.5, 90],                       
                    });

                    let marker;
                    let circle;

                    const socketMap = io();
                
                    socketMap.on('gpsData', (data) => {

                        if (marker){
                            map.removeLayer(marker);
                        }

                        if (circle){
                            map.removeLayer(circle);
                        }

                        const latlng = [data.lat, data.lon];
                        marker = L.marker(latlng, {icon: customIcon}).addTo(map);
                        circle = L.circle(latlng, {
                            color: 'red',      
                            fillColor: '#FFD700', 
                            fillOpacity: 0.5,  
                            radius: 30        
                        }).addTo(map);
                        //map.panTo([data.lat, data.lon]);
                        map.setView(latlng, 17);
                    });       
                </script>
            </div>
        </div>     
    </main>
    <!--main section ends-->
 
    <!--footer section starts-->
    <footer class="footer">
        <div class="umlogo">
        <img src="img/UMlogo-transparent.png" alt="">
        </div>

        <div class="media">
            <img src="img/facebook.png" alt="">
            <img src="img/youtube.png" alt="">
            <img src="img/twitter.png" alt="">
        </div>
    </footer>
    <!--footer section ends-->
</body>
</html>